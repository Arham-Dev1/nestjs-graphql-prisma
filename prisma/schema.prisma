generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator nestgraphql {
  provider                   = "node node_modules/prisma-nestjs-graphql"
  output                     = "../src/common/@generated"
  types_DateTime_fieldType   = "Date | string"
  types_DateTime_graphqlType = "Date"
}

model User {
  id                        String   @id @default(cuid())
  email                     String   @unique
  password                  String
  role                      Role     @default(USER)
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  posts                     Post[]
  profile                   Profile?
  currentHashedRefreshToken String?
}

model Profile {
  id        String   @id @default(cuid())
  username  String   @unique
  firstName String?
  lastName  String?
  bio       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String?  @unique
  user      User?    @relation(fields: [userId], references: [id])
}

model Post {
  id         String     @id @default(cuid())
  title      String
  slug       String     @unique
  content    String
  published  Boolean    @default(true)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  authorId   String?
  author     User?      @relation(fields: [authorId], references: [id])
  categories Category[]
}

model Category {
  id        String   @id @default(cuid())
  name      String
  slug      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
}

enum Role {
  ADMIN
  USER
}
